@page "/fetchdata"

@using BlazorWithspinnerControl.Data
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <button class="btn btn-lg btn-primary pull-xs-right" @onclick="Submit">
        Refresh Data
    </button>

    @if (spinning)
    {
        <div class="spinner"></div>
    }

    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    WeatherForecast[] forecasts;
    bool spinning = false;

    protected override async Task OnInitializedAsync()
    {
        await PopuldateData(false);
    }

    protected async Task Submit()
    {
        spinning=true;
        await Task.Delay(1);      // changes are flushed
        await PopuldateData(true);
        spinning=false;
        await Task.CompletedTask;
    }

    private async Task PopuldateData(bool wait)
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now, wait);
    }
}
